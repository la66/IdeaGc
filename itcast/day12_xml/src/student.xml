<?xml version="1.0" encoding="UTF-8" ?>
<!--<!DOCTYPE students SYSTEM "student.dtd">-->
<students>
    <student number="s001">
        <name id="itcast">
            <xing>张</xing>
            <ming>三</ming>
        </name>
        <age>18</age>
        <sex>male</sex>
    </student>
    <student number="s002">
        <name>jack</name>
        <age>18</age>
        <sex>female</sex>
    </student>
</students>
<!--
*约束:规定xml文档的书写规则
    *作为框架的使用者(程序员)∶
        1.能够在xml中引入约束文档
        2.能够简单的读懂约束文档
    *分类∶
        1.DTD:—种简单的约束技术
        2.Schema:—种复杂的约束技术
    *DTD
        *引人dtd文档到xml文档中
            *内部dtd:将约束规则定义在xml文档中
            *外部dtd:将约束的规则定义在外部的dtd文件中
                *本地:<lDOCTYPE itudents(跟标签名) SYSTEM "dtd文件的位置">
                *网络:
操作xml文档
		1. 解析(读取)：将文档中的数据读取到内存中
		2. 写入：将内存中的数据保存到xml文档中。持久化的存储
解析xml的方式：
		1. DOM：将标记语言文档一次性加载进内存，在内存中形成一颗dom树
			* 优点：操作方便，可以对文档进行CRUD的所有操作
			* 缺点：占内存
		2. SAX：逐行读取，基于事件驱动的。
			* 优点：不占内存。
			* 缺点：只能读取，不能增删改
xml常见的解析器：(根据于dom及sax思想写出来的解析器)
		1. JAXP：sun公司提供的解析器，支持dom和sax两种思想
		2. DOM4J：一款非常优秀的解析器
		3. Jsoup：jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。
		4. PULL：Android操作系统内置的解析器，sax方式的。
Jsoup
        jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。
快速入门：
        1. 导入jar包
		2. 获取Document对象
		3. 获取对应的标签Element对象
		4. 获取数据


-->