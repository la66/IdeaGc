package Demo01;

public class Binarytree {
    public static void main(String[] args) {

    }
}
/*
* 在进行链表结构开发的过程之中会发现所有的数据按照收尾相连的状态进行保存,那么当要进行某一个数据查询的时候(判断段该数据是否存在)，
* 这种情况下它所面对的时间复杂度是“O(n)”，如果说现在它的数据量小（不超过30个）情况下，那么性能上是不会有太大差别的，而-.旦保存的数据量很大，
* 这个时候时间复杂度就会严重损耗程序的运行性能。对于数据的存储的结构就必须发生改变，应该可以尽可能的减少检索次数为出发点进行设计。对于现在的数据结构
* 而言，最好的性能就是“O(logn),“所以现在要想实现它就可以利用二叉树的结构来完成。
*
*
* */